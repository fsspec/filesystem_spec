[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "fsspec"
dynamic = ["version"]
description = "File-system specification"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
maintainers = [{ name = "Martin Durant", email = "mdurant@anaconda.com" }]
keywords = ["file"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.optional-dependencies]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow >= 1"]
dask = ["dask", "distributed"]
dev = [ "black", "pre-commit"]
dropbox = ["dropbox", "dropboxdrivefs", "requests"]
entrypoints = []
full = [
    "adlfs",
    "aiohttp !=4.0.0a0, !=4.0.0a1",
    "dask",
    "distributed",
    "dropbox",
    "dropboxdrivefs",
    "fusepy",
    "gcsfs",
    "libarchive-c",
    "ocifs",
    "panel",
    "paramiko",
    "pyarrow >= 1",
    "pygit2",
    "requests",
    "s3fs",
    "smbprotocol",
    "tqdm",
]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow >= 1"]
http = ["aiohttp !=4.0.0a0, !=4.0.0a1"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
test = [
    "aiohttp",
    "fastparquet",
    "numpy",
    "pytest-cov",
    "pytest-mock",
    "pytest-vcr",
    "pytest<8",
    "requests",
    "tqdm",
    "urllib3 <=1.26.18",
]
test_downstream = [
    "dask-expr",
    "flask",
    "flask_cors",
    "moto >4,<5",
    "pytest-cov",
    "pytest-rerunfailures",
    "pytest-timeout",
    "pytest-xdist",
    "pytest<8",
    "requests",
    "sqlalchemy<2",
    "xarray",
    "zarr",
]
tqdm = ["tqdm"]

[project.urls]
Changelog = "https://filesystem-spec.readthedocs.io/en/latest/changelog.html"
Documentation = "https://filesystem-spec.readthedocs.io/en/latest/"
Homepage = "https://github.com/fsspec/filesystem_spec"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "fsspec/_version.py"

[tool.black]
target_version = ["py310"]
line-length = 88
skip-string-normalization = false
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | fsspec/_version.py
)
'''

[tool.ruff]
exclude = [
    ".tox",
    "build",
    "docs/source/conf.py",
    "fsspec/_version",
]
line-length = 88

[tool.ruff.lint]
select = [
    # fix noqas in fsspec/implementations/http.py
    "ASYNC",
    # "B", enable in later PR
    "C4",
    "G",
    "E4",
    "E7",
    "E9",
    "F",
    "LOG",
    "PERF",
    "PLC",
    "PLE",
    "PLR1722",
    "PLW1510",
    "PLW3301",
    "PIE800",
    "PIE804",
    "PIE807",
    "PIE810",
    # "PT", enable in later PR
    "PYI",
    "RUF006",
    "SLOT",
    "SIM101",
]
ignore = [
    # Assigning lambda expression
    "E731",
    # Ambiguous variable names
    "E741",
    # line break before binary operator
    # uncomment when implemented in ruff
    # "W503",
    # whitespace before :
    "E203",
    # redefs
    "F811",
    # Fix these codes later
    "G004",
    "PERF203",
]

[tool.pytest.ini_options]
# custom markers, need to be defined to avoid warnings
markers = ["asyncio", "vcr"]
